unit FrmCadastro;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics, Vcl.Controls, Vcl.Forms, Vcl.Dialogs,
  Data.DBXMySQL, Data.FMTBcd, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Datasnap.Provider, Datasnap.DBClient, Data.SqlExpr, Data.DBXCommon,
  Vcl.StdCtrls, Vcl.ExtCtrls, Vcl.DBCtrls;

type
  TFormCadastro = class(TForm)
    DBGrid1: TDBGrid;
    Panel1: TPanel;
    DBNavigator1: TDBNavigator;
    Panel6: TPanel;
    BAtualizar: TButton;
    BFechar: TButton;
    BPesquisar: TButton;
    Panel2: TPanel;
    Panel3: TPanel;
    BEditar: TButton;
    BExcluir: TButton;
    Bnovo: TButton;
    Panel4: TPanel;
    BAnterior: TButton;
    BPrimeiro: TButton;
    Bproximo: TButton;
    Bultimo: TButton;
    Panel5: TPanel;
    Label1: TLabel;
    DataSource1: TDataSource;
    procedure BFecharClick(Sender: TObject);
    procedure DataSource1StateChange(Sender: TObject);
    procedure DataSource1DataChange(Sender: TObject; Field: TField);
    procedure bNovoClick(Sender: TObject);
    procedure BEditarClick(Sender: TObject);
    procedure bExcluirClick(Sender: TObject);
    procedure bCancelarClick(Sender: TObject);
    procedure bAtualizarClick(Sender: TObject);
    procedure bPrimeiroClick(Sender: TObject);
    procedure bAnteriorClick(Sender: TObject);
    procedure bProximoClick(Sender: TObject);
    procedure bUltimoClick(Sender: TObject);
    procedure BPesquisarClick(Sender: TObject);

  private
    FDataModuleCadastro: TdmCadastro;
    FfrmFiltroCad: TfrmFiltroCad;
    FfrmManutCadastro: TfrmManutCadastro;
    procedure ChamarManutCadastro;
  public
    { Public declarations }
    property DataModuleCadastro: TDmCadastro read FDataModuleCadastro write FDataModuleCadastro;
    property FormFiltroCadastro: TfrmFiltroCad read FfrmFiltroCad write FfrmFiltroCad;
    property FormManutCadastro: TfrmManutCadastro read FfrmManutCadastro write FfrmManutCadastro;
  end;

var
  FormCadastro: TFormCadastro;

implementation

{$R *.dfm}

{ TFrmCad }

procedure TFrmCadastro.bAnteriorClick(Sender: TObject);
begin
  FDataModuleCadastro.registroAnterior;
end;

procedure TFrmCadastro.bAtualizarClick(Sender: TObject);
begin
  FDataModuleCadastro.atualizarRegistros;
end;

procedure TFrmCadastro.bCancelarClick(Sender: TObject);
begin
  FDataModuleCadastro.cancelarEdicao;
end;

procedure TFrmCadastro.bExcluirClick(Sender: TObject);
begin
  FDataModuleCadastro.excluirRegistro;
end;

procedure TFrmCadastro.BFecharClick(Sender: TObject);
begin
  close;
end;

procedure TFrmCadastro.BEditarClick(Sender: TObject);
begin
  ChamarManutCadastro;
end;

procedure TFrmCadastro.bNovoClick(Sender: TObject);
begin
  FDataModuleCadastro.novoRegistro;
  ChamarManutCadastro;
end;

procedure TFrmCadastro.BPesquisarClick(Sender: TObject);
begin
 if FfrmFiltroCad.ShowModal = mrOk then
 begin
   DataModuleCadastro.filtroSQL(true, FormFiltroCadastro.sqlFiltro);
 end;
end;

procedure TFrmCadastro.bPrimeiroClick(Sender: TObject);
begin
  FDataModuleCadastro.primeiroRegistro;
end;

procedure TFrmCadastro.bProximoClick(Sender: TObject);
begin
  FDataModuleCadastro.proximoRegistro;
end;

procedure TFrmCadastro.bUltimoClick(Sender: TObject);
begin
  FDataModuleCadastro.ultimoRegistro;
end;

procedure TFrmCadastro.ChamarManutCadastro;
var
  mr: integer;
begin
  mr := FormManutCadastro.ShowModal;
  if FDataModuleCadastro.onEdicao then
  begin
    if mr = mrOk then
      FDataModuleCadastro.gravarRegistro
    else
      FDataModuleCadastro.cancelarEdicao;
  end;
end;

procedure TFrmCadastro.DataSource1DataChange(Sender: TObject; Field: TField);
begin
  DataSource1StateChange(Sender);
end;

procedure TFrmCadastro.DataSource1StateChange(Sender: TObject);
begin
  if not(FDataModuleCadastro = nil) then
    with FDataModuleCadastro do
    begin
      Bnovo.Enabled := not onEdicao;
      BExcluir.Enabled := not onEdicao;
      BEditar.Enabled := not tabelaVazia;

      BAtualizar.Enabled := not onEdicao;
      BFechar.Enabled := not onEdicao;

      BPrimeiro.Enabled := not onEdicao and not tabelaVazia and not inicioDados;
      BAnterior.Enabled := not onEdicao and not tabelaVazia and not inicioDados;
      Bproximo.Enabled := not onEdicao and not tabelaVazia and not fimDados;
      Bultimo.Enabled := not onEdicao and not tabelaVazia and not fimDados;
    end;

end;

end.
